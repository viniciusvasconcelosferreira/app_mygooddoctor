# A versão do arquivo de composição se correlaciona diretamente com:
# Quais opções estão disponíveis no arquivo de composição
# A versão mínima do mecanismo Docker compatível

version: "3.8"
# Declaracao dos servicos
services:

  # Frontend
  client:
    build:
      # Caminho do arquivo
      context: ./client
      # Nome do arquivo
      dockerfile: Dockerfile
    restart: always
    # Porta local para porta interna -> local:interna
    ports:
      - "3000:3000"
    # volumes de montagem de ligação
    volumes:
      - ./client:/client
      - /client/node_modules
    links:
      - api
    networks:
      # Setando a comunicacao entre os containers
      - webapp-network

  # Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    ports:
      - "9000:9000"
    # volumes de montagem de ligação
    volumes:
      - ./api:/api
      - /api/node_modules
    depends_on:
      - mongodb
    networks:
      - webapp-network

  # Banco de dados
  mongodb:
    image: mongo
    # Nome do container
    #    container_name: mongodb
    environment:
      # nome de usuário raiz e a senha do contêiner mongodb
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass12345
    # volumes de montagem de ligação
    # O volume de dados é mapeado para o volume do docker mongodb-data e a rede é definida como mongodb_network ao abrir a porta 27017
    volumes:
      - mongodb-data:/data/db/
    networks:
      - mongodb_network
    ports:
      - 27017:27017
    healthcheck:
      # TODO: verificar execucao usando ip do container
      # Configurando usando o ip do servidor
      test: echo 'db.runCommand("ping").ok' | mongo 172.24.33.54:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Interface web para visualizacao do banco de dados
  mongo-express:
    image: mongo-express
    # Nome do container
    #    container_name: mongo-express
    environment:
      # ME_CONFIG_MONGODB_SERVER – serviço MongoDB (mongodb)
      # ME_CONFIG_MONGODB_ENABLE_ADMIN – Habilite o acesso a todos os bancos de dados como administrador
      # ME_CONFIG_MONGODB_ADMINUSERNAME – Nome de usuário do administrador do banco de dados MongoDB
      # ME_CONFIG_MONGODB_ADMINPASSWORD – Senha de administrador do banco de dados MongoDB
      # ME_CONFIG_BASICAUTH_USERNAME – nome de usuário de acesso à interface web Mongo-Express
      # ME_CONFIG_BASICAUTH_PASSWORD – Senha de acesso à interface web Mongo-Express
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass12345
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    # volumes de montagem de ligação
    #    volumes:
    #      - mongodb-data
    depends_on:
      - mongodb
    networks:
      - mongodb_network
    ports:
      - 8081:8081
    healthcheck:
      # mongodb://myUserId:myPassword@mongodb/myDatabase?directConnection=true
      # Configurando usando o ip do servidor
      test: wget --quiet --tries=3 --spider http://admin:admin123@172.24.33.54:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  mongodb-data:
    labels:
      name: mongodb-data

networks:
  mongodb_network:
    labels:
      name: mongodb_network
  webapp-network:
    driver: bridge